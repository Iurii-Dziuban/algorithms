package iurii.job.interview.codility.sixt;

import org.junit.Test;

import java.util.Arrays;
import java.util.Collections;
import java.util.List;

import static org.assertj.core.api.Assertions.assertThat;

public class VulnerabilityScriptTest {

    /**
     * Example, edges of dependencies
     *         5 ->
     *         4 ->
     *         3 -> 2
     *         2 -> 5
     *         1 -> 3, 4
     *         0 -> 4, 5
     */
    @Test
    public void testComplex() {
        VulnerabilityScript vulnerabilityScript0 = new VulnerabilityScript(0, Arrays.asList(4,5));
        VulnerabilityScript vulnerabilityScript1 = new VulnerabilityScript(1, Arrays.asList(3, 4));
        VulnerabilityScript vulnerabilityScript2 = new VulnerabilityScript(2, Collections.singletonList(5));
        VulnerabilityScript vulnerabilityScript3 = new VulnerabilityScript(3, Collections.singletonList(2));
        VulnerabilityScript vulnerabilityScript4 = new VulnerabilityScript(4, Collections.emptyList());
        VulnerabilityScript vulnerabilityScript5 = new VulnerabilityScript(5, Collections.emptyList());
        List<Integer> result = new TopologicalSort().sort(Arrays.asList(vulnerabilityScript0,
                                                 vulnerabilityScript1,
                                                 vulnerabilityScript2,
                                                 vulnerabilityScript3,
                                                 vulnerabilityScript4,
                                                 vulnerabilityScript5));
        assertThat(result).containsExactly(4,5,0,2,3,1);
    }

    /**
     * Example, edges of dependencies
     *         5 ->
     *         4 ->
     *         3 -> 2
     *         2 -> 1
     *         1 -> 0
     *         0 ->
     */
    @Test
    public void testEasy() {
        VulnerabilityScript vulnerabilityScript0 = new VulnerabilityScript(0, Collections.emptyList());
        VulnerabilityScript vulnerabilityScript1 = new VulnerabilityScript(1, Collections.singletonList(0));
        VulnerabilityScript vulnerabilityScript2 = new VulnerabilityScript(2, Collections.singletonList(1));
        VulnerabilityScript vulnerabilityScript3 = new VulnerabilityScript(3, Collections.singletonList(2));
        VulnerabilityScript vulnerabilityScript4 = new VulnerabilityScript(4, Collections.emptyList());
        VulnerabilityScript vulnerabilityScript5 = new VulnerabilityScript(5, Collections.emptyList());
        List<Integer> result = new TopologicalSort().sort(Arrays.asList(vulnerabilityScript0,
                vulnerabilityScript1,
                vulnerabilityScript2,
                vulnerabilityScript3,
                vulnerabilityScript4,
                vulnerabilityScript5));
        assertThat(result).containsExactly(0,1,2,3,4,5);
    }
}
